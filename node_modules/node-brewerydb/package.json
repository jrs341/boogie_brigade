{
  "name": "node-brewerydb",
  "version": "0.1.0",
  "description": "Service library for www.brewerydb.com",
  "main": "index.js",
  "scripts": {
    "test": "VCR_MODE=playback tape test/*.js | faucet",
    "test-manually": "VCR_MODE=cache tape test/*.js"
  },
  "author": {
    "name": "Daniel Ochoa",
    "email": "dannytenaglias@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DanielOchoa/node-brewery-db.git"
  },
  "devDependencies": {
    "faucet": "0.0.1",
    "gulp": "3.9.0",
    "gulp-jshint": "1.10.0",
    "gulp-shell": "0.4.1",
    "gulp-watch": "4.2.4",
    "jshint-stylish": "1.0.1",
    "sepia": "2.0.1",
    "tape": "4.0.0"
  },
  "dependencies": {
    "lodash": "3.8.0",
    "rsvp": "3.0.18",
    "then-request": "2.1.1"
  },
  "gitHead": "e8d020ef0ef5c39fc4c0dbb7a7484392c0de4ab8",
  "readme": "# Node BreweryDB wrapper\n\n[![Build Status](https://travis-ci.org/DanielOchoa/node-brewery-db.svg?branch=master)](https://travis-ci.org/DanielOchoa/node-brewery-db)\n\nThis is a node package (WIP) wrapper for the [http://www.brewerydb.com/](BreweryDB) service\nAPI. It supports both callbacks and promises. See below for usage.\n\n## Setup\n\nInstall the library.\n\n```\nnpm instal https://github.com/DanielOchoa/node-brewery-db\n```\n\nImport the library.\n\n```javascript\nvar BreweryDb = require('node-brewerydb');\n```\n\nCreate a new instance by passing an object with the `apiKey`.\n\n```javascript\nvar client = new BreweryDb({apiKey: yourApiKey});\n```\n\n## How to use\n\nYou can access the restful resources from BreweryDB as follows:\n\n### For Beers\n\nFor the beers endpoint, just call the `beers` method and pass in any extra\nparameters from the [BreweryDB docs](http://www.brewerydb.com/developers/docs-endpoint/beer_index).\nFor example, to get a beer by name:\n\n```javascript\nclient.beers({name: 'Tecate'}, function(err, res) {\n  if (err) {\n    // handle errors\n  }\n  console.log(res);\n});\n```\n\nOr with promises:\n\n```javascript\nreturn client.beers({name: 'Tecate'}).then(function(res) {\n  console.log(res);\n}, function(err) {\n  // in case an error happens.\n});\n```\n\nTo get a single beer, you need to pass the beer id as follows:\n\n```javascript\nclient.beer('IPhAuu', function(err, res) {\n  console.log(res);\n});\n```\n\nYou can also get nested resources for any given resource that allows it, see\nthe [BreweryDB docs](http://www.brewerydb.com/developers/docs-endpoint/beer_brewery).\nFor example, beers take a nested resource:\n\n```javascript\nclient.beer('IPhAuu', 'breweries', function(err, res) {\n  // here are the breweries for this particular beer.\n  console.log(res);\n});\n```\n\nYou can also access any other nested resource for a beer, such as adjunt, event\nand fermentable.\n\n## TODO\n\nSo far we can access beer/beers, nested resources for beer, styles and\nbrewery/breweries. Work needs to be done to access other resources.\n\n## Developing\n\n - Clone package.\n - `cd` into the directory.\n - Make sure you have at least v 10.x of node.\n - `npm install`\n - `npm install -g gulp`\n - `npm run test` to run the tests.\n - `gulp` for running tests and to watch for changes in files to re-run tests.\n\nThe library uses Sepia and tape to record requests and play them back so as to\nnot depend on actual http requests when running tests. This can sometimes be a\nlittle difficult to debug.\n\n**NOTE:** You need to use a real api key to record a request for the first time.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/DanielOchoa/node-brewery-db/issues"
  },
  "homepage": "https://github.com/DanielOchoa/node-brewery-db#readme",
  "_id": "node-brewerydb@0.1.0",
  "_shasum": "ad6ece7cb58de4eeaeae00fc453c907a23497ca6",
  "_from": "git+https://github.com/DanielOchoa/node-brewery-db.git",
  "_resolved": "git+https://github.com/DanielOchoa/node-brewery-db.git#e8d020ef0ef5c39fc4c0dbb7a7484392c0de4ab8"
}
